{"version":3,"sources":["constants/dataCostants.js","constants/userConstants.js","store.js","reducers/userReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Meta.js","components/ProductCarousel.js","screens/HomeScreen.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/AdminLoginScreen.js","screens/VolunteerScreen.js","screens/VolunteerTable.js","screens/AllocatedScreen.js","screens/AllocatedTable.js","screens/AdminSection.js","actions/dataActions.js","App.js","reportWebVitals.js","index.js"],"names":["DATA_LIST_REQUEST","DATA_LIST_SUCCESS","DATA_LIST_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","datalist","state","data","action","type","loading","payload","error","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userUpdate","userDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","register","name","email","password","contact_information","user_location","spoken_languages","availability","a","config","headers","axios","post","setItem","stringify","console","log","response","message","Header","useDispatch","useSelector","className","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","onClick","Link","Footer","Row","Col","rel","target","Meta","description","keywords","author","Helmet","content","defaultProps","carouselData","image","ProductCarousel","useEffect","Carousel","class","pause","map","ind","interval","Image","src","Caption","Button","HomeScreen","match","Message","variant","children","Alert","Loader","Spinner","animation","role","style","width","height","margin","display","FormContainer","xs","md","LoginScreen","history","useState","setEmail","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","login","Group","controlId","Label","Control","placeholder","value","onChange","RegisterScreen","setName","confirmPassword","setConfirmPassword","setcontact_information","userlocation","setuserlocation","setspoken_languages","setavailability","setMessage","submitHandler","alert","gap","marginLeft","abc","handleAdd","length","i","onChangeValue","inputdata","handleChange","deletVal","splice","handleDelete","ProfileScreen","getState","Authorization","token","get","put","updateUserProfile","_id","AdminLoginScreen","VolunteerScreen","ele","createdAt","VolunteerTable","Table","bordered","hover","responsive","AllocatedScreen","allocation","classroomID","requirement","languageRequirement","AllocatedTable","setAllocation","active","setActive","App","path","component","exact","AdminSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77cac731.chunk.js","sourcesContent":["export const DATA_LIST_REQUEST = 'DATA_LIST_REQUEST'\r\nexport const DATA_LIST_SUCCESS = 'DATA_LIST_SUCCESS'\r\nexport const DATA_LIST_FAIL = 'DATA_LIST_FAIL'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserRegisterReducer,\r\n\tuserDetailsReducer,\r\n\tuserUpdateProfileReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n\tdataListReducer,\r\n} from './reducers/userReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n\tdatalist:dataListReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserUpdateProfile: userUpdateProfileReducer,\r\n\tuserList: userListReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\t\r\n})\r\n\r\n\r\n// Get userInfo from local storage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null\r\n// Get shippingAddress from local storage\r\n\r\n// Get paymentMethod from local storage\r\n\r\n\r\n// Create initial state\r\nconst initialState = {\r\n\r\n\tuserLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\n// Set middleware to thunk middleware\r\nconst middleware = [thunk]\r\n\r\n// Create store\r\n// Pass initial state to load things at that point\r\n// Setup redux-devtools-extension\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import { DATA_LIST_FAIL, DATA_LIST_REQUEST, DATA_LIST_SUCCESS } from '../constants/dataCostants'\r\nimport {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n// userLoginReducer for users\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// On Logout\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userRegisterReducer for users\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_REGISTER_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDetailsReducer for users\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DETAILS_REQUEST:\r\n\t\t\treturn { ...state, loading: true }\r\n\r\n\t\t// On success\r\n\t\t// user will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateProfileReducer for users\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_PROFILE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// Then reset\r\n\t\tcase USER_UPDATE_PROFILE_RESET:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userListReducer for admin users\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LIST_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// users will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn { loading: false, users: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_LIST_RESET:\r\n\t\t\treturn { users: [] }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDeleteReducer for admin users\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DELETE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateReducer for admin users\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase USER_UPDATE_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport const dataListReducer = (state = { data: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase DATA_LIST_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t\r\n\t\t// loading will be done, so false\r\n\t\tcase DATA_LIST_SUCCESS:\r\n\t\t\treturn { loading: false, data: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase DATA_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\t\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\n\r\n// Actions to login\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make post request to login\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'https://teachforindia-production.up.railway.app/api/users/login',\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to logout\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo')\r\n\r\n\tdispatch({ type: USER_LOGOUT })\r\n\t\r\n\tdispatch({ type: USER_LIST_RESET })\r\n\tdocument.location.href = '/login'\r\n}\r\n// Actions to register\r\nexport const register = (name, email, password,contact_information,user_location,spoken_languages,availability) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n    \r\n\t\t// Make post request to register\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'https://teachforindia-production.up.railway.app/api/users',\r\n\t\t\t{ name, email, password,contact_information,user_location,spoken_languages,availability},\r\n\t\t\tconfig\r\n\t\t)\r\n\t\t// Dispatch register\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Auto login after registration\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAIL,\r\n\t\t\tpayload:\"User Already Exist\"\r\n\t\t\t\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\t   \r\n\t\t})\r\n\t\tconsole.log(error.response.data.message)\r\n\t}\r\n}\r\n// Actions to get user details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make get request to get user details\r\n\t\tconst { data } = await axios.get(`https://teachforindia-production.up.railway.app/api/users/${id}`, config)\r\n\t\t// Dispatch user details\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\t     error.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t\t\r\n\t}\r\n}   \r\n// Actions to get user details\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make put request to update user profile\r\n\t\tconst { data } = await axios.put('https://teachforindia-production.up.railway.app/api/users/profile', user, config)\r\n\t\t// Dispatch update profile\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Dispatch user login success\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to get user details\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LIST_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\t\r\n  \r\n\t\t// Make get request to get list of users\r\n\t\tconst  {data}  = await axios.get('https://teachforindia-production.up.railway.app/api/users')\r\n\t\t\t\r\n\t\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to delete user\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DELETE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make delete request to delete a user\r\n\t\tawait axios.delete(`https://teachforindia-production.up.railway.app/api/users/${id}`, config)\r\n\r\n\t\tdispatch({ type: USER_DELETE_SUCCESS })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to update user\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make put request to update a user\r\n\t\tconst { data } = await axios.put(`https://teachforindia-production.up.railway.app/api/users/${user._id}`, user, config)\r\n\r\n\t\tdispatch({ type: USER_UPDATE_SUCCESS })\r\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\t\tdispatch({ type: USER_DETAILS_RESET })\r\n\t} catch (error) {\r\n\t\tconst message = // Send a custom error message\r\n\t\t\t// Else send a generic error message\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message\r\n\t\tif (message === 'Not authorized, token failed') {\r\n\t\t\tdispatch(logout())\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t})\r\n\t}\r\n}\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className='headers '>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName='text-uppercase nav-main '\r\n\t\t\t\t\r\n\t\t\t\texpand='lg'\r\n\t\t\t\tcollapseOnSelect\r\n\t\t\t>\r\n\t\t\t\t<Container >\r\n\t\t\t\t\t\r\n\t\t\t\t\t<LinkContainer to='/'>\r\n\t\t\t\t\t\t<Navbar.Brand>Teach For India</Navbar.Brand>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Nav className='ml-auto'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\t<NavDropdown title={userInfo.name} id='username'>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/profile'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t{/* Logout */}\r\n\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHandler}>\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t// Login\r\n\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i>User Sign In\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<LinkContainer to='/admin'>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i> Admin Section\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className='text-center py-3'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\thref='https://www.teachforindia.org/'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\tclassName='Ashish'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-user-circle'></i> Teach For India\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords, author }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t\t<meta name='description' content={description} />\r\n\t\t\t\t<meta name='keywords' content={keywords} />\r\n\t\t\t\t<meta name='author' content={author} />\r\n\t\t\t</Helmet>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nMeta.defaultProps = {\r\n\ttitle: 'Teach For India | Home',\r\n\tdescription: 'Enhancing Education',\r\n\tkeywords: 'education, teaching, fellowship',\r\n\tauthor: 'Ashish Agnihotri',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Button, Carousel, Image } from 'react-bootstrap'\r\n\r\n\r\n    let carouselData=[\r\n\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/website-carousel-alumni.png\"\r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/Annual_Report_website.png\"   \r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/fellowship-desktop.png\"\r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/website-carousel-1.png\"\r\n        }\r\n       \r\n\r\n\r\n]\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    useEffect(()=>{\r\n        \r\n    },[carouselData])\r\n\treturn (\r\n        <>\r\n\t\t<Carousel  class=\"img-wrapper\" pause='hover' className='bg-light'>\r\n\t\t\t{carouselData.map((carouselData,ind) => (\r\n\t\t\t\t<Carousel.Item key={ind} interval={2000}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Image class=\"img-responsive\" src={carouselData.image}   />\r\n\t\t\t\t\t\t<Carousel.Caption className='carousel-caption'>\r\n                            <div class=\"img-overlay\">\r\n                                <Link to=\"/register\">\r\n\t\t\t\t\t\t\t<Button class=\"btn btn-md btn-success\">\r\n\t\t\t\t\t\t\t\tApply Now\r\n\t\t\t\t\t\t\t</Button>\r\n                            </Link>\r\n                            </div>\r\n\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\r\n\t\t\t\t</Carousel.Item>\r\n\t\t\t))}\r\n\t\t</Carousel>\r\n        </>\r\n    )\r\n       \r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Meta from '../components/Meta'\r\nimport MyVerticallyCenteredModal from '../components/MyVerticallyCenteredModal'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Meta />\r\n\t\t\t<ProductCarousel/>\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n\treturn <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n\tvariant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<Spinner\r\n\t\t\tanimation='border'\r\n\t\t\trole='status'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100px',\r\n\t\t\t\theight: '100px',\r\n\t\t\t\tmargin: 'auto',\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span className='sr-only'>Loading...</span>\r\n\t\t</Spinner>\r\n\t)\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className='justify-content-md-center'>\r\n\t\t\t\t<Col xs={12} md={6}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { loading, error, userInfo } = userLogin\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo) {\r\n\t\t\t\thistory.push(redirect)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, userInfo, redirect] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// Dispatch login\r\n\t\tdispatch(login(email, password))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Volunteer Sign In</h1>\r\n\t\t\t{/* \r\n            On error, display error\r\n            When loading, display Loading... */}\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t{/* Email */}\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Password */}\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Button */}\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t{/* Register */}\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tNew Customer?{' '}\r\n\t\t\t\t\t<Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst[contact_information,setcontact_information]=useState('')\r\n\tconst[userlocation,setuserlocation]=useState('')\r\n\tconst[spoken_languages,setspoken_languages]=useState([])\r\n\tconst[availability,setavailability]=useState('')\r\n\tconst [message, setMessage] = useState(null)\r\n\r\n\tconst dispatch = useDispatch()\r\n\t\r\n\tconst handleAdd=()=>{\r\n\t\tconst abc=[...spoken_languages,[]]\r\n\t\tsetspoken_languages(abc)\r\n\t\t\r\n\t}\r\n\tconst handleChange=(onChangeValue,i)=>{\r\n\t\t\r\n\t const inputdata=[...spoken_languages]\r\n\t inputdata[i]=onChangeValue.target.value;\r\n\t \r\n\t setspoken_languages(inputdata)\r\n\t\r\n\t}\r\n\tconst handleDelete=(i)=>{\r\n\t\tconst deletVal=[...spoken_languages]\r\n\t\tdeletVal.splice(i,1)\r\n\t\tsetspoken_languages(deletVal)  \r\n\t}\r\n\t\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userRegister = useSelector((state) => state.userRegister)\r\n\tconst { loading, error, userInfo } = userRegister\r\n\t\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo) {\r\n\t\t\t\thistory.push(redirect)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, userInfo, redirect] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\t\r\n\tconst submitHandler = async(e) => {\r\n\t\te.preventDefault()\r\n\t\t\r\n\t\t// Check if passwords match\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t} \r\n\t\tif(name==''||email==''||password==''||contact_information==''||userlocation==''||spoken_languages==[]||availability=='')\r\n\t\t{\r\n\t\t\tsetMessage(\"All Fields are required\")\r\n\t\t}\r\n\t\telse {\r\n\t\t\r\n\t\t dispatch(register(name, email, password,contact_information,userlocation,spoken_languages,availability))\r\n\t\talert(\"Register Successfully\")\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<FormContainer className=\"mt-13\">\r\n\t\t\t<h1>Volunteer Sign Up</h1>\r\n\t\t\t{/* \r\n            On error, display message/error\r\n            When loading, display Loading... */}\r\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t{/* Name */}\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group className='mr2' controlId='name'>\r\n\t\t\t\t\t<Form.Label >Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t \tclass=\"form-control\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Email */}\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t{/* Password */}\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Confirm Password */}\r\n\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group controlId='contact_information'>\r\n\t\t\t\t\t<Form.Label>Contact Information</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Enter Contact Information'\r\n\t\t\t\t\t\tvalue={contact_information}\r\n\t\t\t\t\t\tonChange={(e) => setcontact_information(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='userlocation'>\r\n\t\t\t\t\t<Form.Label>Location</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter Location'\r\n\t\t\t\t\t\tvalue={userlocation}\r\n\t\t\t\t\t\tonChange={(e) => setuserlocation(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"2.75rem\"}}>\r\n\t\t\t\t\r\n\t\t\t\t<Form.Group controlId='availability'>\r\n\t\t\t\t\t<Form.Label>Availability</Form.Label>\r\n\t\t\t\t\t<h6 className=\"visibleNow\">Hint: Which days of the week you are<br/> available to support<br/> the class</h6>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Availability'\r\n\t\t\t\t\t\tvalue={availability}\r\n\t\t\t\t\t\tonChange={(e) => setavailability(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='Language'>\r\n\t\t\t\t\t<Form.Label>Language</Form.Label>\r\n\t\t\t\t\t<Button style={{marginLeft:\"1rem\"}} onClick={()=>handleAdd()}>{spoken_languages.length>0?\"Add More\":\"Add\"}</Button>\r\n        \t\t\t<>\r\n\t\t\t\t\t{spoken_languages.length>0 && spoken_languages.map((data,i)=>{\r\n            \t\treturn(\r\n               \t\t<div key={i}>\r\n                    <input className='lang_inp' value={data} onChange={e=>handleChange(e,i)} />\r\n                    <Button className=' btn-danger btn-work' onClick={()=>handleDelete(i)}>x</Button>\r\n               \t\t</div>\r\n            \t\t)\r\n        \t\t\t})}\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t{/* Button */}\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t{/* Register */}\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tHave an Account?{' '}\r\n\t\t\t\t\t<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst [message, setMessage] = useState(null)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userDetails = useSelector((state) => state.userDetails)\r\n\tconst { loading, error, user } = userDetails\r\n\t\r\n\t// Make sure user is logged in to access this page\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\t// Get success value from userUpdateProfileReducer\r\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n\tconst { success } = userUpdateProfile\r\n\r\n\r\n\t\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!userInfo) {\r\n\t\t\t\thistory.push('/login')\r\n\t\t\t} else {\r\n\t\t\t\tif (!user || !user.name || success) {\r\n\t\t\t\t\tdispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n\t\t\t\t\tdispatch(getUserDetails('profile'))\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetName(user.name)\r\n\t\t\t\t\tsetEmail(user.email)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch, history, userInfo, user, success] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// Check if passwords match\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t} else {\r\n\t\t\tdispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t{/* On error, display message/error\r\n            When loading, display Loading... */}\r\n\t\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t\t{success && <Message variant='success'>Profile Updated</Message>}\r\n\t\t\t\t{loading && <Loader />}\r\n\t\t\t\t<Form onSubmit={submitHandler} className='push-to-right'>\r\n\t\t\t\t\t{/* Name */}\r\n\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='name'\r\n\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Email */}\r\n\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Password */}\r\n\t\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Confirm Password */}\r\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Button */}\r\n\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\t\t\t\r\n\t\t</Row>\r\n\t)\r\n}\r\n//this is a corrected\r\nexport default ProfileScreen\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\n\r\nconst AdminLoginScreen = () => {\r\n  const [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t \r\n\t\t// if(!email==\"\" && !password==\"\")\r\n    // {\r\n    //   document.location.href=\"/adminsection\"\r\n    // }\r\n    // else{\r\n    //   setMessage(\"All Fields are required\")\r\n    // }\r\n    document.location.href=\"/adminsection\"\r\n\t}\r\n  return (\r\n    <FormContainer>\r\n    <h1>Admin Sign In</h1>\r\n    <p className=\"mess\">You can Sign In with Any Email And Password</p>\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n    <Form onSubmit={submitHandler}>\r\n      {/* Email */}\r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      {/* Password */}\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      {/* Button */}\r\n      <Button type='submit' variant='primary'>\r\n        Sign In\r\n      </Button>\r\n    </Form>\r\n    \r\n   \r\n  </FormContainer>\r\n  )\r\n}\r\n\r\nexport default AdminLoginScreen\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nconst VolunteerScreen = ({ele,ind}) => {\r\n  \r\n  return (\r\n\r\n   \r\n    <tbody>\r\n      \r\n                <tr key={ele._id}>\r\n                <td>{ind+1}</td>\r\n                <td>{ele.name}</td>\r\n                <td>{ele.email}</td>\r\n                <td>{ele.user_location}</td>\r\n                <td>{ele.availability}</td>\r\n                <td>{ele.createdAt}</td>\r\n                <td>{ele.contact_information}</td>\r\n                <td>{ele.spoken_languages.map((ele,ind)=>(\r\n                   <Row>\r\n                         \r\n                         <Col>{ele}</Col>\r\n                   </Row>\r\n                ))}</td>\r\n                \r\n                \r\n               \r\n                </tr>\r\n       \r\n    </tbody>\r\n\r\n  )\r\n}\r\n\r\nexport default VolunteerScreen\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport VolunteerScreen from './VolunteerScreen'\r\nconst VolunteerTable = ({users}) => {\r\n     \r\n  return (\r\n    <Table bordered hover responsive className='table-sm'>\r\n    <thead>\r\n    <tr>\r\n        <th>SNo.</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Location</th>\r\n        <th>Availability</th>\r\n        <th>Date & Time Of Registration</th>\r\n        <th>Contact Information</th>\r\n        <th>Spoken Languages</th>\r\n    </tr>\r\n  </thead>\r\n      {\r\n            users.map((ele,ind)=>(\r\n          <VolunteerScreen key={ele._id} ind={ind} ele={ele}/>\r\n          \r\n        ))\r\n      }\r\n</Table>\r\n  )\r\n}\r\n\r\nexport default VolunteerTable\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nconst AllocatedScreen = ({ele,ind}) => {\r\n    console.log(ele)\r\n  return (\r\n    <tbody>\r\n      \r\n    <tr key={ele._id}>\r\n    <td>{ind+1}</td>\r\n    <td>{ele.name}</td>\r\n    <td>{ele.email}</td>\r\n    <td>{ele.user_location}</td>\r\n    <td>{ele.availability}</td>\r\n    <td>{ele.createdAt}</td>\r\n    <td>{ele.contact_information}</td>\r\n    <td>{ele.spoken_languages.map((ele,ind)=>(\r\n       <Row>\r\n             \r\n             <Col>{ele}</Col>\r\n       </Row>\r\n    ))}</td>\r\n         <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.location}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n      <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.classroomID}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n          <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.requirement}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n       <td>{ele.allocation.map((ele,i)=>(\r\n       \r\n            <Col>{ele.languageRequirement.map((ele,i)=>(\r\n                <Col>{ele}</Col>\r\n            ))}</Col>  \r\n         \r\n      ))}</td>\r\n         \r\n    \r\n   \r\n    </tr>\r\n\r\n</tbody>\r\n  )\r\n}\r\n\r\nexport default AllocatedScreen\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport AllocatedScreen from './AllocatedScreen'\r\n\r\nconst AllocatedTable = ({users}) => {\r\n  return (\r\n    <Table bordered hover responsive className='table-sm'>\r\n    <thead>\r\n    <tr>\r\n        <th>SNo.</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Location</th>\r\n        <th>Availability</th>\r\n        <th>Date & Time Of Registration</th>\r\n        <th>Contact Information</th>\r\n        <th>Spoken Languages</th>\r\n         \r\n        <th>Class Location</th>\r\n\r\n        <th>Allocated ClassroomID</th>\r\n        <th>Requirement Left</th>\r\n        <th>Class Languages Required</th>\r\n    </tr>\r\n  </thead>\r\n      {\r\n            users.map((ele,ind)=>(\r\n          <AllocatedScreen key={ele._id} ind={ind} ele={ele}/>\r\n          \r\n        ))\r\n      }\r\n</Table>\r\n  )\r\n}\r\n\r\nexport default AllocatedTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport {  listUsers } from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport VolunteerTable from './VolunteerTable'\r\nimport { listData } from '../actions/dataActions'\r\n\r\nimport AllocatedTable from './AllocatedTable'\r\n\r\n\r\nconst ProfileScreen = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userList = useSelector((state) => state.userList)\r\n  const {users,loading,error}=userList\r\n \r\n  const[allocation,setAllocation]=useState(false)\r\n  const[active,setActive]=useState(false)\r\n  const[message,setMessage]=useState(\"\")\r\n  useEffect(()=>{\r\n    dispatch(listUsers())\r\n    dispatch(listData())\r\n  },[dispatch])\r\n\r\n  \r\n  const handleUsers=()=>{\r\n   \r\n    setAllocation(false)\r\n    if(users.length>0)\r\n    { \r\n      setActive(true)\r\n    }\r\n    else{\r\n      setMessage(\"No Volunteer Registered\")\r\n    }\r\n  }\r\n \r\n \r\n  const handleAllocation=()=>{\r\n   \r\n    setActive(false)\r\n    if(users.length<20)\r\n    {\r\n      setMessage(`20 Registrations Were Not Complete`)\r\n    }\r\n    else{\r\n      setAllocation(true)\r\n     \r\n    }\r\n   \r\n  }          \r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\r\n          {loading&&<Loader/>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t\t\t<center>\r\n          <Row>\r\n          <Col>\r\n          <Button onClick={handleUsers}  variant='primary'>\r\n\t\t\t\t\tGet all\tVolunteer \r\n\t\t\t\t\t</Button>\r\n          </Col>\r\n          <Col>\r\n          <Button onClick={handleAllocation}  variant='primary'>\r\n\t\t\t\t\t\tAllocated Volunteers\r\n\t\t\t\t\t</Button>\r\n          </Col>\r\n          </Row>\r\n          </center>\r\n          {\r\n            active && <VolunteerTable users={users}/>\r\n          }\r\n\r\n          {\r\n            allocation && <AllocatedTable users={users} />\r\n          }\r\n\r\n          \r\n\t\t</div>\r\n\t)\r\n}\r\n//this is a corrected\r\nexport default ProfileScreen\r\n","\r\nimport axios from 'axios'\r\nimport { DATA_LIST_FAIL, DATA_LIST_REQUEST, DATA_LIST_SUCCESS } from '../constants/dataCostants'\r\n\r\n\r\n\r\n\r\nexport const listData = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: DATA_LIST_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\t\r\n  \r\n\t\t// Make get request to get list of users\r\n\t\tconst  {data}  = await axios.get('https://teachforindia-production.up.railway.app/api/data')\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DATA_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: DATA_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\n\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\n\r\nimport AdminLoginScreen from './screens/AdminLoginScreen'\r\nimport AdminSection from './screens/AdminSection'\r\n\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Header />\r\n\t\t\t<main className='py-3'>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* LoginScreen */}\r\n\t\t\t\t\t<Route path='/login' component={LoginScreen} />\r\n\t\t\t\t\t{/* RegisterScreen */}\r\n\t\t\t\t\t<Route path='/register' component={RegisterScreen} />\r\n\t\t\t\t\t{/* ProfileScreen */}\r\n\t\t\t\t\t<Route path='/profile' component={ProfileScreen} />\r\n\t\t\t\t\t<Route path='/admin' component={AdminLoginScreen} exact />\r\n\t\t\t\t\t<Route path='/' component={HomeScreen} exact />\r\n\t\t\t\t\t<Route path='/adminsection' component={AdminSection}  />\r\n\t\t\t\t</Container>\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t</React.StrictMode>\r\n\t,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}