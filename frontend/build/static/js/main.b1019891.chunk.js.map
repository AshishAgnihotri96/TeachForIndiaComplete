{"version":3,"sources":["constants/dataCostants.js","constants/userConstants.js","store.js","reducers/userReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Meta.js","components/ProductCarousel.js","screens/HomeScreen.js","components/Message.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/AdminLoginScreen.js","screens/VolunteerScreen.js","screens/VolunteerTable.js","screens/AllocatedScreen.js","screens/AllocatedTable.js","screens/AdminSection.js","actions/dataActions.js","App.js","reportWebVitals.js","index.js"],"names":["DATA_LIST_REQUEST","DATA_LIST_SUCCESS","DATA_LIST_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","datalist","state","data","action","type","loading","payload","error","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userUpdate","userDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","register","name","email","password","contact_information","user_location","spoken_languages","availability","a","config","headers","axios","post","setItem","stringify","console","log","response","message","Header","useDispatch","useSelector","className","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","onClick","Link","Footer","Row","Col","rel","href","target","Meta","description","keywords","author","Helmet","content","defaultProps","carouselData","image","ProductCarousel","useEffect","Carousel","class","pause","map","ind","interval","Image","src","Caption","Button","HomeScreen","match","Message","variant","children","Alert","Loader","Spinner","animation","role","style","width","height","margin","display","FormContainer","xs","md","LoginScreen","location","history","useState","setEmail","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","login","Group","controlId","Label","Control","placeholder","value","onChange","RegisterScreen","setName","confirmPassword","setConfirmPassword","setcontact_information","userlocation","setuserlocation","setspoken_languages","setavailability","setMessage","submitHandler","alert","gap","marginLeft","abc","handleAdd","length","i","onChangeValue","inputdata","handleChange","deletVal","splice","handleDelete","ProfileScreen","getState","Authorization","token","get","put","updateUserProfile","_id","AdminLoginScreen","VolunteerScreen","ele","createdAt","VolunteerTable","Table","bordered","hover","responsive","AllocatedScreen","allocation","classroomID","requirement","languageRequirement","AllocatedTable","setAllocation","active","setActive","App","path","component","exact","AdminSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1019891.chunk.js","sourcesContent":["export const DATA_LIST_REQUEST = 'DATA_LIST_REQUEST'\r\nexport const DATA_LIST_SUCCESS = 'DATA_LIST_SUCCESS'\r\nexport const DATA_LIST_FAIL = 'DATA_LIST_FAIL'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserRegisterReducer,\r\n\tuserDetailsReducer,\r\n\tuserUpdateProfileReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n\tdataListReducer,\r\n} from './reducers/userReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n\tdatalist:dataListReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserUpdateProfile: userUpdateProfileReducer,\r\n\tuserList: userListReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\t\r\n})\r\n\r\n\r\n// Get userInfo from local storage\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null\r\n// Get shippingAddress from local storage\r\n\r\n// Get paymentMethod from local storage\r\n\r\n\r\n// Create initial state\r\nconst initialState = {\r\n\r\n\tuserLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\n// Set middleware to thunk middleware\r\nconst middleware = [thunk]\r\n\r\n// Create store\r\n// Pass initial state to load things at that point\r\n// Setup redux-devtools-extension\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import { DATA_LIST_FAIL, DATA_LIST_REQUEST, DATA_LIST_SUCCESS } from '../constants/dataCostants'\r\nimport {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n\tUSER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n// userLoginReducer for users\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LOGIN_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// On Logout\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userRegisterReducer for users\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_REGISTER_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_REGISTER_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDetailsReducer for users\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DETAILS_REQUEST:\r\n\t\t\treturn { ...state, loading: true }\r\n\r\n\t\t// On success\r\n\t\t// user will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateProfileReducer for users\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_PROFILE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// userInfo will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true, userInfo: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_PROFILE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// Then reset\r\n\t\tcase USER_UPDATE_PROFILE_RESET:\r\n\t\t\treturn {}\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userListReducer for admin users\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_LIST_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// users will contain data as a payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_SUCCESS:\r\n\t\t\treturn { loading: false, users: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_LIST_RESET:\r\n\t\t\treturn { users: [] }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userDeleteReducer for admin users\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_DELETE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_DELETE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// userUpdateReducer for admin users\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase USER_UPDATE_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_SUCCESS:\r\n\t\t\treturn { loading: false, success: true }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase USER_UPDATE_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\r\n\t\tcase USER_UPDATE_RESET:\r\n\t\t\treturn { user: {} }\r\n\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport const dataListReducer = (state = { data: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\t// loading will NOT be done yet, so true\r\n\t\tcase DATA_LIST_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\r\n\t\t// On success\r\n\t\t\r\n\t\t// loading will be done, so false\r\n\t\tcase DATA_LIST_SUCCESS:\r\n\t\t\treturn { loading: false, data: action.payload }\r\n\r\n\t\t// On fail\r\n\t\t// the error will contain the payload\r\n\t\t// loading will be done, so false\r\n\t\tcase DATA_LIST_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\t\r\n\t\t// In any other case, just return the state\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\n\r\n// Actions to login\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make post request to login\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'https://teachforindia-production.up.railway.app/api/users/login',\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to logout\r\nexport const logout = () => (dispatch) => {\r\n\t\r\n\tlocalStorage.removeItem('userInfo')\r\n\r\n\tdispatch({ type: USER_LOGOUT })\r\n\t\r\n\tdispatch({ type: USER_LIST_RESET })\r\n\t\r\n\t\r\n}\r\n// Actions to register\r\nexport const register = (name, email, password,contact_information,user_location,spoken_languages,availability) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n    \r\n\t\t// Make post request to register\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'https://teachforindia-production.up.railway.app/api/users',\r\n\t\t\t{ name, email, password,contact_information,user_location,spoken_languages,availability},\r\n\t\t\tconfig\r\n\t\t)\r\n\t\t// Dispatch register\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Auto login after registration\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAIL,\r\n\t\t\tpayload:\"User Already Exist\"\r\n\t\t\t\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\t   \r\n\t\t})\r\n\t\tconsole.log(error.response.data.message)\r\n\t}\r\n}\r\n// Actions to get user details\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make get request to get user details\r\n\t\tconst { data } = await axios.get(`https://teachforindia-production.up.railway.app/api/users/${id}`, config)\r\n\t\t// Dispatch user details\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\t     error.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t\t\r\n\t}\r\n}   \r\n// Actions to get user details\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make put request to update user profile\r\n\t\tconst { data } = await axios.put('https://teachforindia-production.up.railway.app/api/users/profile', user, config)\r\n\t\t// Dispatch update profile\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Dispatch user login success\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t\t// Set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to get user details\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LIST_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\t\r\n  \r\n\t\t// Make get request to get list of users\r\n\t\tconst  {data}  = await axios.get('https://teachforindia-production.up.railway.app/api/users')\r\n\t\t\t\r\n\t\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to delete user\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DELETE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make delete request to delete a user\r\n\t\tawait axios.delete(`https://teachforindia-production.up.railway.app/api/users/${id}`, config)\r\n\r\n\t\tdispatch({ type: USER_DELETE_SUCCESS })\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}\r\n// Actions to update user\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState()\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\t// Make put request to update a user\r\n\t\tconst { data } = await axios.put(`https://teachforindia-production.up.railway.app/api/users/${user._id}`, user, config)\r\n\r\n\t\tdispatch({ type: USER_UPDATE_SUCCESS })\r\n\t\tdispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\t\tdispatch({ type: USER_DETAILS_RESET })\r\n\t} catch (error) {\r\n\t\tconst message = // Send a custom error message\r\n\t\t\t// Else send a generic error message\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message\r\n\t\tif (message === 'Not authorized, token failed') {\r\n\t\t\tdispatch(logout())\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t})\r\n\t}\r\n}\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className='headers '>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName='text-uppercase nav-main '\r\n\t\t\t\t\r\n\t\t\t\texpand='lg'\r\n\t\t\t\tcollapseOnSelect\r\n\t\t\t>\r\n\t\t\t\t<Container >\r\n\t\t\t\t\t\r\n\t\t\t\t\t<LinkContainer to='/'>\r\n\t\t\t\t\t\t<Navbar.Brand>Teach For India</Navbar.Brand>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Nav className='ml-auto'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{userInfo ? (\r\n\t\t\t\t\t\t\t\t<NavDropdown title={userInfo.name} id='username'>\r\n\t\t\t\t\t\t\t\t\t<LinkContainer to='/profile'>\r\n\t\t\t\t\t\t\t\t\t\t<NavDropdown.Item>Profile</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t\t\t{/* Logout */}\r\n\t\t\t\t\t\t\t\t\t<NavDropdown.Item onClick={logoutHandler}>\r\n\t\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t// Login\r\n\t\t\t\t\t\t\t\t<LinkContainer to='/login'>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i>User Sign In\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<LinkContainer to='/admin'>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link>\r\n\t\t\t\t\t\t\t\t\t\t<i className='fas fa-user'></i> Admin Section\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className='text-center py-3'>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\thref='https://www.teachforindia.org/'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\tclassName='Ashish'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className='fas fa-user-circle'></i> Teach For India\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords, author }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t\t<meta name='description' content={description} />\r\n\t\t\t\t<meta name='keywords' content={keywords} />\r\n\t\t\t\t<meta name='author' content={author} />\r\n\t\t\t</Helmet>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nMeta.defaultProps = {\r\n\ttitle: 'Teach For India | Home',\r\n\tdescription: 'Enhancing Education',\r\n\tkeywords: 'education, teaching, fellowship',\r\n\tauthor: 'Ashish Agnihotri',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Button, Carousel, Image } from 'react-bootstrap'\r\n\r\n\r\n    let carouselData=[\r\n\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/website-carousel-alumni.png\"\r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/Annual_Report_website.png\"   \r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/fellowship-desktop.png\"\r\n        },\r\n        {\r\n            image:\"https://www.teachforindia.org/assets/website-carousel-1.png\"\r\n        }\r\n       \r\n\r\n\r\n]\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    useEffect(()=>{\r\n        \r\n    },[carouselData])\r\n\treturn (\r\n        <>\r\n\t\t<Carousel  class=\"img-wrapper\" pause='hover' className='bg-light'>\r\n\t\t\t{carouselData.map((carouselData,ind) => (\r\n\t\t\t\t<Carousel.Item key={ind} interval={2000}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Image class=\"img-responsive\" src={carouselData.image}   />\r\n\t\t\t\t\t\t<Carousel.Caption className='carousel-caption'>\r\n                            <div class=\"img-overlay\">\r\n                                <Link to=\"/register\">\r\n\t\t\t\t\t\t\t<Button class=\"btn btn-md btn-success\">\r\n\t\t\t\t\t\t\t\tApply Now\r\n\t\t\t\t\t\t\t</Button>\r\n                            </Link>\r\n                            </div>\r\n\t\t\t\t\t\t</Carousel.Caption>\r\n\t\t\t\t\t\r\n\t\t\t\t</Carousel.Item>\r\n\t\t\t))}\r\n\t\t</Carousel>\r\n        </>\r\n    )\r\n       \r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Meta from '../components/Meta'\r\nimport MyVerticallyCenteredModal from '../components/MyVerticallyCenteredModal'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n\t\t\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Meta />\r\n\t\t\t<ProductCarousel/>\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n\treturn <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n\tvariant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<Spinner\r\n\t\t\tanimation='border'\r\n\t\t\trole='status'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100px',\r\n\t\t\t\theight: '100px',\r\n\t\t\t\tmargin: 'auto',\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span className='sr-only'>Loading...</span>\r\n\t\t</Spinner>\r\n\t)\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className='justify-content-md-center'>\r\n\t\t\t\t<Col xs={12} md={6}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { loading, error, userInfo } = userLogin\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo) {\r\n\t\t\t\thistory.push(redirect)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, userInfo, redirect] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// Dispatch login\r\n\t\tdispatch(login(email, password))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Volunteer Sign In</h1>\r\n\t\t\t{/* \r\n            On error, display error\r\n            When loading, display Loading... */}\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t{/* Email */}\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Password */}\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Button */}\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t{/* Register */}\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tNew Volunteer?{' '}\r\n\t\t\t\t\t<Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\n\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst[contact_information,setcontact_information]=useState('')\r\n\tconst[userlocation,setuserlocation]=useState('')\r\n\tconst[spoken_languages,setspoken_languages]=useState([])\r\n\tconst[availability,setavailability]=useState('')\r\n\tconst [message, setMessage] = useState(null)\r\n\r\n\tconst dispatch = useDispatch()\r\n\t\r\n\tconst handleAdd=()=>{\r\n\t\tconst abc=[...spoken_languages,[]]\r\n\t\tsetspoken_languages(abc)\r\n\t\t\r\n\t}\r\n\tconst handleChange=(onChangeValue,i)=>{\r\n\t\t\r\n\t const inputdata=[...spoken_languages]\r\n\t inputdata[i]=onChangeValue.target.value;\r\n\t \r\n\t setspoken_languages(inputdata)\r\n\t\r\n\t}\r\n\tconst handleDelete=(i)=>{\r\n\t\tconst deletVal=[...spoken_languages]\r\n\t\tdeletVal.splice(i,1)\r\n\t\tsetspoken_languages(deletVal)  \r\n\t}\r\n\t\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userRegister = useSelector((state) => state.userRegister)\r\n\tconst { loading, error, userInfo } = userRegister\r\n\t\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (userInfo) {\r\n\t\t\t\thistory.push(redirect)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[history, userInfo, redirect] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\t\r\n\tconst submitHandler = async(e) => {\r\n\t\te.preventDefault()\r\n\t\t\r\n\t\t// Check if passwords match\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t} \r\n\t\tif(name==''||email==''||password==''||contact_information==''||userlocation==''||spoken_languages==[]||availability=='')\r\n\t\t{\r\n\t\t\tsetMessage(\"All Fields are required\")\r\n\t\t}\r\n\t\telse {\r\n\t\t\r\n\t\t dispatch(register(name, email, password,contact_information,userlocation,spoken_languages,availability))\r\n\t\talert(\"Register Successfully\")\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<FormContainer className=\"mt-13\">\r\n\t\t\t<h1>Volunteer Sign Up</h1>\r\n\t\t\t{/* \r\n            On error, display message/error\r\n            When loading, display Loading... */}\r\n\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t{/* Name */}\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group className='mr2' controlId='name'>\r\n\t\t\t\t\t<Form.Label >Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t \tclass=\"form-control\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Email */}\r\n\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t{/* Password */}\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{/* Confirm Password */}\r\n\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"6rem\"}}>\r\n\t\t\t\t<Form.Group controlId='contact_information'>\r\n\t\t\t\t\t<Form.Label>Contact Information</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tplaceholder='Enter Contact Information'\r\n\t\t\t\t\t\tvalue={contact_information}\r\n\t\t\t\t\t\tonChange={(e) => setcontact_information(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='userlocation'>\r\n\t\t\t\t\t<Form.Label>Location</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Enter Location'\r\n\t\t\t\t\t\tvalue={userlocation}\r\n\t\t\t\t\t\tonChange={(e) => setuserlocation(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container style={{display:\"flex\",gap:\"2.75rem\"}}>\r\n\t\t\t\t\r\n\t\t\t\t<Form.Group controlId='availability'>\r\n\t\t\t\t\t<Form.Label>Availability</Form.Label>\r\n\t\t\t\t\t<h6 className=\"visibleNow\">Hint: Which days of the week you are<br/> available to support<br/> the class</h6>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Availability'\r\n\t\t\t\t\t\tvalue={availability}\r\n\t\t\t\t\t\tonChange={(e) => setavailability(e.target.value)}\r\n\t\t\t\t\t></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group controlId='Language'>\r\n\t\t\t\t\t<Form.Label>Language</Form.Label>\r\n\t\t\t\t\t<Button style={{marginLeft:\"1rem\"}} onClick={()=>handleAdd()}>{spoken_languages.length>0?\"Add More\":\"Add\"}</Button>\r\n        \t\t\t<>\r\n\t\t\t\t\t{spoken_languages.length>0 && spoken_languages.map((data,i)=>{\r\n            \t\treturn(\r\n               \t\t<div key={i}>\r\n                    <input className='lang_inp' value={data} onChange={e=>handleChange(e,i)} />\r\n                    <Button className=' btn-danger btn-work' onClick={()=>handleDelete(i)}>x</Button>\r\n               \t\t</div>\r\n            \t\t)\r\n        \t\t\t})}\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Container>\r\n\t\t\t\t{/* Button */}\r\n\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t{/* Register */}\r\n\t\t\t<Row className='py-3'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\tHave an Account?{' '}\r\n\t\t\t\t\t<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\r\n\t\t</FormContainer>\r\n\t)\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n\tconst [name, setName] = useState('')\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tconst [message, setMessage] = useState(null)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userDetails = useSelector((state) => state.userDetails)\r\n\tconst { loading, error, user } = userDetails\r\n\t\r\n\t// Make sure user is logged in to access this page\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\t// Get success value from userUpdateProfileReducer\r\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n\tconst { success } = userUpdateProfile\r\n\r\n\r\n\t\r\n\t// make request here upon component load\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!userInfo) {\r\n\t\t\t\thistory.push('/login')\r\n\t\t\t} else {\r\n\t\t\t\tif (!user || !user.name || success) {\r\n\t\t\t\t\tdispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n\t\t\t\t\tdispatch(getUserDetails('profile'))\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetName(user.name)\r\n\t\t\t\t\tsetEmail(user.email)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[dispatch, history, userInfo, user, success] // Dependencies, on change they fire off useEffect\r\n\t)\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// Check if passwords match\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\tsetMessage('Passwords do not match')\r\n\t\t} else {\r\n\t\t\tdispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={3}>\r\n\t\t\t\t<h2>User Profile</h2>\r\n\t\t\t\t{/* On error, display message/error\r\n            When loading, display Loading... */}\r\n\t\t\t\t{message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t\t{success && <Message variant='success'>Profile Updated</Message>}\r\n\t\t\t\t{loading && <Loader />}\r\n\t\t\t\t<Form onSubmit={submitHandler} className='push-to-right'>\r\n\t\t\t\t\t{/* Name */}\r\n\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='name'\r\n\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Email */}\r\n\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Password */}\r\n\t\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Confirm Password */}\r\n\t\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{/* Button */}\r\n\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\t\t\t\r\n\t\t</Row>\r\n\t)\r\n}\r\n//this is a corrected\r\nexport default ProfileScreen\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n  \r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\n\r\nconst AdminLoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(\r\n\t\t() => {\r\n\t\t\t\r\n\t\t\t\tif(email && password)\r\n        {\r\n          history.push(redirect)\r\n        }\r\n\t\t\t\r\n\t\t},\r\n\t\t[history, redirect] \r\n\t)\r\n\r\n  const submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\t \r\n\t\tif(!email==\"\" && !password==\"\")\r\n    {\r\n        \r\n    }\r\n    else{\r\n      setMessage(\"All Fields are required\")\r\n    }\r\n    \r\n\t}\r\n\r\n  return (\r\n    <FormContainer>\r\n    <h1>Admin Sign In</h1>\r\n    <p className=\"mess\">You can Sign In with Any Email And Password</p>\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n    <Form onSubmit={submitHandler}>\r\n      {/* Email */}\r\n      <Form.Group controlId='email'>\r\n        <Form.Label>Email Address</Form.Label>\r\n        <Form.Control\r\n          type='email'\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      {/* Password */}\r\n      <Form.Group controlId='password'>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          placeholder='Enter password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      {/* Button */}\r\n      <Link to={email.length>0 && password.length>0?\"/adminsection\":\"/admin\"}>\r\n      <Button  type='submit' variant='primary'>\r\n        Sign In\r\n      </Button>\r\n      </Link>\r\n     \r\n    </Form>\r\n    \r\n   \r\n  </FormContainer>\r\n  )\r\n}\r\n\r\nexport default AdminLoginScreen\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nconst VolunteerScreen = ({ele,ind}) => {\r\n  \r\n  return (\r\n\r\n   \r\n    <tbody>\r\n      \r\n                <tr key={ele._id}>\r\n                <td>{ind+1}</td>\r\n                <td>{ele.name}</td>\r\n                <td>{ele.email}</td>\r\n                <td>{ele.user_location}</td>\r\n                <td>{ele.availability}</td>\r\n                <td>{ele.createdAt}</td>\r\n                <td>{ele.contact_information}</td>\r\n                <td>{ele.spoken_languages.map((ele,ind)=>(\r\n                   <Row>\r\n                         \r\n                         <Col>{ele}</Col>\r\n                   </Row>\r\n                ))}</td>\r\n                \r\n                \r\n               \r\n                </tr>\r\n       \r\n    </tbody>\r\n\r\n  )\r\n}\r\n\r\nexport default VolunteerScreen\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport VolunteerScreen from './VolunteerScreen'\r\nconst VolunteerTable = ({users}) => {\r\n     \r\n  return (\r\n    <Table bordered hover responsive className='table-sm'>\r\n    <thead>\r\n    <tr>\r\n        <th>SNo.</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Location</th>\r\n        <th>Availability</th>\r\n        <th>Date & Time Of Registration</th>\r\n        <th>Contact Information</th>\r\n        <th>Spoken Languages</th>\r\n    </tr>\r\n  </thead>\r\n      {\r\n            users.map((ele,ind)=>(\r\n          <VolunteerScreen key={ele._id} ind={ind} ele={ele}/>\r\n          \r\n        ))\r\n      }\r\n</Table>\r\n  )\r\n}\r\n\r\nexport default VolunteerTable\r\n","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nconst AllocatedScreen = ({ele,ind}) => {\r\n    console.log(ele)\r\n  return (\r\n    <tbody>\r\n      \r\n    <tr key={ele._id}>\r\n    <td>{ind+1}</td>\r\n    <td>{ele.name}</td>\r\n    <td>{ele.email}</td>\r\n    <td>{ele.user_location}</td>\r\n    <td>{ele.availability}</td>\r\n    <td>{ele.createdAt}</td>\r\n    <td>{ele.contact_information}</td>\r\n    <td>{ele.spoken_languages.map((ele,ind)=>(\r\n       <Row>\r\n             \r\n             <Col>{ele}</Col>\r\n       </Row>\r\n    ))}</td>\r\n         <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.location}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n      <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.classroomID}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n          <td>{ele.allocation.map((ele)=>(\r\n        <Row>\r\n            <Col>{ele.requirement}</Col>  \r\n        </Row>\r\n      ))}</td>\r\n       <td>{ele.allocation.map((ele,i)=>(\r\n       \r\n            <Col>{ele.languageRequirement.map((ele,i)=>(\r\n                <Col>{ele}</Col>\r\n            ))}</Col>  \r\n         \r\n      ))}</td>\r\n         \r\n    \r\n   \r\n    </tr>\r\n\r\n</tbody>\r\n  )\r\n}\r\n\r\nexport default AllocatedScreen\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport AllocatedScreen from './AllocatedScreen'\r\n\r\nconst AllocatedTable = ({users}) => {\r\n  return (\r\n    <Table bordered hover responsive className='table-sm'>\r\n    <thead>\r\n    <tr>\r\n        <th>SNo.</th>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>Location</th>\r\n        <th>Availability</th>\r\n        <th>Date & Time Of Registration</th>\r\n        <th>Contact Information</th>\r\n        <th>Spoken Languages</th>\r\n         \r\n        <th>Class Location</th>\r\n\r\n        <th>Allocated ClassroomID</th>\r\n        <th>Requirement Left</th>\r\n        <th>Class Languages Required</th>\r\n    </tr>\r\n  </thead>\r\n      {\r\n            users.map((ele,ind)=>(\r\n          <AllocatedScreen key={ele._id} ind={ind} ele={ele}/>\r\n          \r\n        ))\r\n      }\r\n</Table>\r\n  )\r\n}\r\n\r\nexport default AllocatedTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport {  listUsers } from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport VolunteerTable from './VolunteerTable'\r\nimport { listData } from '../actions/dataActions'\r\n\r\nimport AllocatedTable from './AllocatedTable'\r\n\r\n\r\nconst ProfileScreen = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\t// useSelector is to grab what we want from the state\r\n\tconst userList = useSelector((state) => state.userList)\r\n  const {users,loading,error}=userList\r\n \r\n  const[allocation,setAllocation]=useState(false)\r\n  const[active,setActive]=useState(false)\r\n  const[message,setMessage]=useState(\"\")\r\n  useEffect(()=>{\r\n    dispatch(listUsers())\r\n    dispatch(listData())\r\n  },[dispatch])\r\n\r\n  \r\n  const handleUsers=()=>{\r\n   \r\n    setAllocation(false)\r\n    if(users.length>0)\r\n    { \r\n      setActive(true)\r\n    }\r\n    else{\r\n      setMessage(\"No Volunteer Registered\")\r\n    }\r\n  }\r\n \r\n \r\n  const handleAllocation=()=>{\r\n   \r\n    setActive(false)\r\n    if(users.length<20)\r\n    {\r\n      setMessage(`20 Registrations Were Not Complete`)\r\n    }\r\n    else{\r\n      setAllocation(true)\r\n     \r\n    }\r\n   \r\n  }          \r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\r\n          {loading&&<Loader/>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n\t\t\t\t\t<center>\r\n          <Row>\r\n          <Col>\r\n          <Button onClick={handleUsers}  variant='primary'>\r\n\t\t\t\t\tGet all\tVolunteer \r\n\t\t\t\t\t</Button>\r\n          </Col>\r\n          <Col>\r\n          <Button onClick={handleAllocation}  variant='primary'>\r\n\t\t\t\t\t\tAllocated Volunteers\r\n\t\t\t\t\t</Button>\r\n          </Col>\r\n          </Row>\r\n          </center>\r\n          {\r\n            active && <VolunteerTable users={users}/>\r\n          }\r\n\r\n          {\r\n            allocation && <AllocatedTable users={users} />\r\n          }\r\n\r\n          \r\n\t\t</div>\r\n\t)\r\n}\r\n//this is a corrected\r\nexport default ProfileScreen\r\n","\r\nimport axios from 'axios'\r\nimport { DATA_LIST_FAIL, DATA_LIST_REQUEST, DATA_LIST_SUCCESS } from '../constants/dataCostants'\r\n\r\n\r\n\r\n\r\nexport const listData = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: DATA_LIST_REQUEST })\r\n\r\n\t\t// Get userInfo from userLogin by destructuring\r\n\t\t\r\n  \r\n\t\t// Make get request to get list of users\r\n\t\tconst  {data}  = await axios.get('https://teachforindia-production.up.railway.app/api/data')\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: DATA_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: DATA_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\t// Send a custom error message\r\n\t\t\t\t// Else send a generic error message\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\n\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\n\r\nimport AdminLoginScreen from './screens/AdminLoginScreen'\r\nimport AdminSection from './screens/AdminSection'\r\n\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Header />\r\n\t\t\t<main className='py-3'>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{/* LoginScreen */}\r\n\t\t\t\t\t<Route path='/login' component={LoginScreen} />\r\n\t\t\t\t\t{/* RegisterScreen */}\r\n\t\t\t\t\t<Route path='/register' component={RegisterScreen} />\r\n\t\t\t\t\t{/* ProfileScreen */}\r\n\t\t\t\t\t<Route path='/profile' component={ProfileScreen} />\r\n\t\t\t\t\t<Route path='/admin' component={AdminLoginScreen} exact />\r\n\t\t\t\t\t<Route path='/' component={HomeScreen} exact />\r\n\t\t\t\t\t<Route path='/adminsection' component={AdminSection}  />\r\n\t\t\t\t</Container>\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n   \r\n\t,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}